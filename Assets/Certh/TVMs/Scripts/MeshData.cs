//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
public class MeshData
{
	private List<byte[]>    m_TextureData = new List<byte[]> ();
	private List<Vector3>   m_Vertices = new List<Vector3>();
	private List<Vector3>   m_Normals = new List<Vector3> ();
	private List<int>       m_Indices = new List<int>();
	private List<Color>     m_VtxAttributes = new List<Color>();
	private Size2D          m_TextureSize = new Size2D();
	private TextureFormat   m_TextureFormat = TextureFormat.RGB24;


    /// kapostol additions
    // this will fill the uv attribute. It will tell the shader whether a vertex is inside a bounding box
    private List<Vector2> m_isInBox = new List<Vector2>();

    // joint positions/orientations
    private List<float> m_JointPositions = new List<float>();
    private List<float> m_JointOrientations = new List<float>();
    /// 

    public MeshData ()
	{

	}

	public Size2D TextureSize { get; set; }

	public List<Vector3> Vertices { get  { return m_Vertices; } }

	public List<Vector3> Normals { get { return m_Normals; } }

	public List<int> Indices { get { return m_Indices; } }

    /// kapostol additions

    public List<Vector2> InBox { get { return m_isInBox; } set { m_isInBox = value; } }

    public List<float> JointPositions { get { return m_JointPositions; } }

    public List<float> JointOrientations { get { return m_JointOrientations; } }
    /// end kapostol additions


	public List<Color> VtxAttributes { get  { return m_VtxAttributes; } }

	public void Clear()
	{
		m_TextureData.Clear ();
		m_Vertices.Clear ();
		m_Normals.Clear ();
		m_Indices.Clear ();
		m_VtxAttributes.Clear ();


        /// kapostol addition
        m_isInBox.Clear();
        /// end kapostol addition
	}
}


